cpmeta{
	port: 9094

	dataUploadService{
		instanceServerId: "instances"
		dataServiceUserId: "data"
		submitters {
			"http://meta.icos-cp.eu/ontologies/cpmeta/instances/ATC": {
				authorizedUserIds: ["test@upload"],
				datasetClass: "http://meta.icos-cp.eu/ontologies/cpmeta/AtcDataSet",
				stationClass: "http://meta.icos-cp.eu/ontologies/cpmeta/AS",
				dataStructureClass: "http://meta.icos-cp.eu/ontologies/cpmeta/AtcDataStructure"
			}
		}
	}

	instanceServers {
		instances: {
			//logName: "rdflog"
			writeContexts: ["http://meta.icos-cp.eu/ontologies/cpmeta/instances/"]
			ingestion {
				ingesterId: "manualContent"
				ingestAtStartup: true
			}
		}
		stations: {
			//logName: "stations"
			writeContexts: ["http://meta.icos-cp.eu/ontologies/stationentry/"]
			readContexts: ${cpmeta.instanceServers.stations.writeContexts}
			ingestion {
				ingesterId: "stations"
				ingestAtStartup: true
				//ingestionInterval: 36000 //seconds
			}
		}
	}

	rdfLog {
		server{
			host: "localhost"
			port: 5432
		}
		credentials {
			db: "postgres"
			user: "postgres"
			password: "password"
		}
	}

	onto {
		cpmeta {
			authorizedUserIds: []
			owlResource: "/owl/cpmeta.owl"
			instanceServerId: "instances"
		}
		stationentry {
			authorizedUserIds: []
			owlResource: "/owl/stationEntry.owl"
			instanceServerId: "stations"
		}
	}

	auth = ${cpauth.auth.pub} //substituted from cpauth core config

}
